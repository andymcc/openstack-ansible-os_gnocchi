---
# Copyright 2016, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

## This can be used as examples for use in hand-building the necessary overrides
## for now. An improved mechanism for this is pending.

## Describe the gnocchi endpoint used by ceilometer
gnocchi_service_proto: http
gnocchi_service_port: 8041
gnocchi_service_internaluri_proto: "{{ openstack_service_internaluri_proto | default(gnocchi_service_proto) }}"
gnocchi_service_internalurl: "{{ gnocchi_service_internaluri_proto }}://{{ internal_lb_vip_address }}:{{ gnocchi_service_port }}"

## Ensure gnocchiclient is installed on the ceilometer collectors
ceilometer_pip_packages:
  - ceilometer
  - python-ceilometerclient
  - ceilometermiddleware
  - PyMySQL
  - python-memcached
  - pycrypto
  - warlock
  - pymongo
  - tooz
  - libvirt-python
  - gnocchiclient

utility_pip_packages:
  - python-openstackclient
  - python-ceilometerclient
  - python-cinderclient
  - python-glanceclient
  - python-heatclient
  - python-keystoneclient
  - python-neutronclient
  - python-novaclient
  - python-swiftclient
  - python-memcached
  - pycrypto
  - gnocchiclient

## Demonstrating the expected configurations necessary to use gnocchi as the ceilometer dispatcher
## These must be disabled because of an issue in config_template and the use of MultiStrOpt in Ceilometer
## NOTE(stevelle) no support for storing events in gnocchi, so eliminate dispatchers and refuse to store
ceilometer_ceilometer_conf_overrides:
  DEFAULT:
    event_dispatchers: ""
    meter_dispatchers: gnocchi
  collector:
    batch_size: 10
    batch_timeout: 5
  notification:
    store_events: false
  storage:
    max_retries: 80
  dispatcher_gnocchi:
    archive_policy: low
## Demonstrating expected ceilometer configs necessary ONLY to use swift for
##   gnocchi storage under ceilometer
## NOTE(stevelle): using a filter at dispatcher is inferior to filtering in
##   ceilometermiddleware on Swift however facts and registered variable scopes
##   are a bit volatile for use in the ceilometermiddleware configuration e.g.
##   https://github.com/openstack/ceilometermiddleware/blob/master/ceilometermiddleware/swift.py#L39
##   and this is just easier than extracting the project_id expected by that
##   middleware and making all the changes necessary in the middleware needed
##   to get it to perform the necessary filtering without getting fingers too
##   deep into the swift role.
    filter_service_activity: true
    filter_project: "{{ gnocchi_service_project_name }}"

## Demonstrating the expected configurations necessary to use ceph for storage
#    driver: ceph
#    ceph_username: gnocchi
#    ceph_keyring: "/etc/ceph/ceph.client.{{ gnocchi_service_user_name }}.keyring"


## Demonstrating expected configs required to use gnocchi meters for aodh alarming
aodh_aodh_conf_overrides:
  DEFAULT:
    gnocchi_url: "{{ gnocchi_service_internalurl }}"

## FUTURE(stevelle)
# disable ceilometer-api: https://review.openstack.org/#/c/270818/
